 A = 166140(8) -->configuracion en base 8 de un bpf c/s 24 bits
 B = 16053714(10) -->configuracion en base 10 de un zoneado de 3 bytes

 ----------------------------------------------------------------------
 A)
 A = 1 6 6 1 4 0 --> esta en base 8 lo paso a base 2 por regla de la potencia (cada digito en abse 8 representa 3 en base 2)
    000 000 001 110 110 001 100 000 -> bpf c/s 24 bits
    como no tiene un 1 al comienzo puedo pasarlo a base 10 directamente (pero para mayor facilidad antes pasare por base 16 agrupando de a 4)
    0000 0000 1110 1100 0110 0000 
    EC60 --> BASE 16 (y ahora a base 10)
    14 * 16'3 + 12 * 16'2 + 6 * 16'1 + 0 * 16'0 = 60512 -- EN BASE 10

B = 16053714 --> primero lo paso a base 16 para poder ver su verdadera forma (atraves de divisiones sucesivas)
    16053714|16 (resto = 2)
    1003357|16 (resto = 13)
    62709|16    (resto = 5) 
    3919|16     (resto = 15)
    244|16      (resto = 4)
    15

    F4F5D2 BASE 16  -> - 452 (D indica numero negativo)-> BASE 10 

A = 60512   (base 10)
B = -452    (base 10)
-------------------------------------------------------------------------
B)
N° de padron = 104980 (BASE 10)

A = 0000 0000 1110 1100 0110 0000 BPF C/S 24 BITS

tengo que pasar el padron primero a base 2 (lo voy a hacer atreves de divisiones sucesivas, metodo ya mostrado arriba)
104980 (base 10) -> 0001 1001 1010 0001 0100 (base 2)
y lo extiendo a 24 bits
PADRON = 0000 0001 1001 1010 0001 0100 bpf c/s 24 bits

Bueno ahora en ves de hacer la resta, procedo a hacer A + el complemento(PADRON)

0000 0001 1001 1010 0001 0100
-----------------------------
1111 1110 0110 0101 1110 1011
+                           1
-----------------------------
1111 1110 0110 0101 1110 1100

COMPLEMENTO(PADRON) = 1111 1110 0110 0101 1110 1100

y ahora los sumo
   00000 0001 1101 1011 1100 000  -->   COMO LOS 2 ULTIMOS BITS DEL ACARREO -00- COINCIDEN EL RESULTADO ES VALIDO
    0000 0000 1110 1100 0110 0000
+   1111 1110 0110 0101 1110 1100
    -----------------------------
    1111 1111 0101 0010 0100 1100 bpf c/s 24 bits

------------------------------------------------------------------------
C)Como es valido el resultado conseguido en B lo tomo
1111 1111 0101 0010 0100 1100 bpf c/s 24 bits

Como tiene un 1 al principio primero debo hacerle el complemento

    1111 1111 0101 0010 0100 1100
    -----------------------------
    0000 0000 1010 1101 1011 0011
    +                           1
    -----------------------------
   -0000 0000 1010 1101 1011 0100 -> base 2

ahora si normalizo

- 1,010 1101 1011 0100 (base 2) * 10'15 (base 10)

signo = 1 (ES NEGATIVO)
exc = 15 + 127 = 142 (base 10) --divisiones sucesivas--> 1000 1110 (base 2)

1|1000 1110|010 1101 1011 0100 0000 0000| -> BPFlotante IEEE 754 de precisión simple

1100 0111 0010 1101 1011 0100 0000 0000 (solo lo acomode para poder agrupar de a 4 asi es mas facil pasar a base 16)

C72DD400 -->CONFIGURACION HEXADECIMAL DEL BPFlotante IEEE 754 de precisión simple

-------------------------------------------------------------------------------------------------------------------------
