1)
A = 40300514 -> CONFIG OCTAL DE UN BPF C/S 24 BITS

PASO A BASE 2 POR REGLA DE LA POTENCIA (1 DIGITO EN BASE 8 SON 3 EN BASE 2)

100 000 011 000 000 101 001 100 BPF C/S 24 BITS

COMO TIENE UN 1 COMO PRIMER NUMERO PARA CONSEGUIR EL VALOR ABSOLUTO LE HAGO EL COMPLEMENTO

00000 0000 0000 0000 0000 011                        
 0111 1110 0111 1110 1011 0011 
 +                           1
 -----------------------------
- 0111 1110 0111 1110 1011 0100 BASE 2

PRIMERO LO PASO A BASE 16 AGRUPANDO DE A 4 PARA REDUCIR LA EXPRESION

- 7E7EB4 BASE 16
PASO DE BASE 16 A BASE 10 POR MULTIPLICACIONES
7 * 16'5 + 14 * 16'4 + 7 * 16'3 + 14 * 16'2 + 11 * 16'1 + 4 * 16'0 =

A = - 8 289 972 BASE 10

B = 16053686 --> CONFIGURACION EN BASE 10 DE UN ZONEADO DE 3 BYTES
PASO DE BASE 10 A BASE 16 POR DIVISIONES SUCESIVAS

16053686|16
6        1003355|16
11               62709|16
5                      3919|16
15                          244|16
4                               15

F4F5B6 BASE 16 --> EL NUMERO ALMACENADO ES EL - 456 BASE 10
B = - 456 
-----------------------------------------------------------------------------------------------------
2)
PADRON = 104980 EN BASE 10
A - PADRON EN BPF C/S 24 BITS
A = 1000 0001 1000 0001 0100 1100 

PASO PADRON DE BASE 10 A BASE 16 PARA FACILITAR LOS PASAJES
APLICO DIVISIONES SUCESIVAS
104980|16 (RESTO 4)
6561|16 (RESTO 1)
410|16 (RESTO 10)
25|16  (RESTO 9)
1
19A14 PADRON EN BASE 16
Y AHORA USO REGLA DE LA POTENCIA PARA PASAR A BASE 2, CADA NUMERO EN ABSE 16 SON 4 NUMEROS EN BASE 2
0001 1001 1010 0001 0100 BASE 2
Y AHORA LO TRANSFORMO EN UN BPF C/S 24 BITS (COMPLETO CON 0 A IZQ)
PADRON = 0000 0001 1001 1010 0001 0100 BPS

EN VES DE RESTAR, HAGO A + EL COMPLEMENTO DE PADRON

   00000 0000 0000 0000 0000 011
    1111 1110 0110 0101 1110 1011
    +                           1
    -----------------------------
    1111 1110 0110 0101 1110 1100  --> COMPLEMENTO PADRON

Y AHORA SUMO A Y EL COMPLEMENTO DE PADRON

   10000 0000 0000 0010 1001 100        <-- ULTIMOS 2 BITS DEL ACARREO SON DIFERENTES -> RESULTADO INVALIDO
    1000 0001 1000 0001 0100 1100
+   1111 1110 0110 0101 1110 1100
    -----------------------------
    0111 1111 1110 0111 0011 1000
---------------------------------------------------------------------------------------------------------
3)TOMO B YA QUE EL RESULTADO ANTERIOR FUE INVALIDO
B = - 456 BASE 10
LO PASO A BASE 16 PARA LUEGO PASAR A BASE 2 MAS FACILITAR
USO DIVISIONES SUCESIVAS
456|16 RESTO 8
28|16 RESTO 12
1

- 1C8 BASE 16
Y AHORA PASO A BASE 2 (CADA NUMERO EN BASE 16 SON 4 EN BASE 2)
- 0001 1100 1000 BASE 2
NORMALIZO
-1,1100 1000 * 2'1000 (EXPONEN = 8 EN BASE 10)

SIGNO = 1
EXP = 8 + 127 = 135 BASE 10 --(POR DIVISIONES SUCESIVAS)--> 1000 0111 BASE 2

1|1000 0111|11 0010 0000 0000 0000 0000 0

Y AHORA LO PASO A BASE 16 PARA TENER SU CONFIG HEXADECIMAL

1100 0011 1110 0100 0000 0000 0000 0000 (AGRUPO DE A 4 DIGITOS YA QUE ESTAMOS EN BASE 2)
C 3 E 4 0 0 0 0 --> ESTA ES LA CONFIGURACION HEXADECIMAL
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
A = 69659 --> CONFIGURACION EN BASE 10 DE UN EMPAQUETADO DE 3 BYTES
LO PASO A BASE 16 POR DIV SUCESIVAS
01101B BASE 16 -DEL EMPAQUETADO SE OBTIENE-> - 1101 EN BASE 10

PARA LLEGAR A BPFLOTANTE IEEE 754 DE PRESICION SIMPLE
PRIMERO LO PASO A BASE 16 PARA SIMPLICARLOS PASAJES
-44D BASE 16 Y DE ACA A BASE 2 (CADA NUMERO EN ABSE 16 SON 4 EN BASE 2)
- 0100 0100 1101 BASE 2
NORMALIZO
1,00 0100 1101 * 2'1010 (EL EXPONENTE = 10 EN BASE 10)

SIGNO = 1
EXP = 10 + 127 = 137 BASE 10 --> 1000 1001 EN BASE 2

1 1000 1001 00 0100 1101 0000 0000 0000 0

LO PASO A BASE 16 PORQUE ME PDIE SU CONFIGURACION HEXADECIMAL
1100 0100 1000 1001 1010 0000 0000 0000
C 4 8 9 A 0 0 0 | BASE 16
-----------------------------------------------------------------------------------------------
B = C5002000 | CONFIGURACION HEXADECIMAL DE UN NUMERO EN BPFLOTANTE IEEE 754 SIMPLE

1|100 0101 0|000 0000 0010 0000 0000 0000 BPF IEEE 754
SIGNO = -
EXP = 1000 1010 = 138 (BASE 10) - 127 = 11 (BASE 10)
MANTISA = 000 0000 0010 0000 0000 0000
-1,000 0000 0010 0000 0000 0000 * 2'11
-1000 0000 0010 -> BASE 2
-802 -> BASE 16
-2050 -> BASE 10

RESTO A-B O (A + COMPLEMENTO DE B) EN FORMATO BPF C/S 16 BITS Y INDICO VALIDEZ DEL RESULTADO
A = - 0100 0100 1101 EN BASE 2 
EXTIENDO A 16 BITS
A = - 0000 0100 0100 1101
COMO ES NEG LE HAGO COMPLEMENTO

1111 1011 1011 0010
+                 1
-------------------
1111 1011 1011 0011 BPS C/S 16 BITS

B = - 1000 0000 0010 EN BASE 2
LO EXPANDO A 16 BITS = - 0000 1000 0000 0010 Y COMO ES NEGATIVO LO COMPLEMENTO
PERO COMO LO VOY A VOVLER A COMPLEMENTAR LO DEJO ASI (EL SIMBOLO DESAPARECE PORQUE
CON LA PRIMER COMPLEMENTACION LO TRANSOFMR EN BPF C/S)

   11111 0000 0000 010 --> COMO LOS DOS ULTIMSO BITS DEL ACARREO SON IGUALES EL RESULTADO ES VALIDO
    1111 1011 1011 0011
+   0000 1000 0000 0010
    -------------------
    0000 0011 1011 0101 
----------------------------------------------------------------------------------------------------
0000 0011 1011 0101  -> BPF C/S 16 BITS
A BPF IEEE 754
NORMALIZO
1,1 1011 0101 * 2'1001 (EL EXPONENTE = 9 EN BASE 10)
SIGNO = 0
EXP = 9 + 127 = 136 BASE 10 -> 1000 1000 BASE 2

0 1000 1000 1 1011 0101 0000 0000 0000 00 -> BPF IEEE 754
Y LO PASO A BASE 8 
001 000 100 011 011 010 100 000 000 000 000
10433240000|BASE 8
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
El siguiente es el contenido de memoria ocupado desde la dirección 53B(16) a la 540(16), ambas inclusive:

2351126110641175

Se pide:
Indicar en qué base se encuentra almacenada la cadena y justificar apropiadamente.
Hallar los dos primeros BPF c/signo de 16 bits sin superposición e indicar cuales son los números almacenados en base 10.
Restar ambos números en formato BPF c/signo de 16 bits indicando la validez del resultado.
Hallar el empaquetado de máxima longitud dentro de la cadena y almacenarlo en formato IEEE754 de precisión simple dando su configuración hexadecimal.

SON 16 DIGITOS
540 - 53B = 5 CELDAS + 1 = 6 CELDAS OCUPADAS (3B 3C 3D 3E 3F 40)
1 CELDA = 8 BITS
6 CELDAS = 48 BITS (6 * 8)
16 DIGITOS = 48 BITS
1 DIGITO = 3 BITS (48 / 16)
BASE = 2'N = 2'3 = 8 --> EN BASE 8 ESTA EL NUMERO

2351126110641175
LO PASO A BASE 2 (CADA DIGITO EN ABSE 8 SON 3 EN BASE 2)
010 011 101 001 001 0|10 110 001 001 000 11|0 100 001 001 111 101 |BASE 2 

PRIMER BPF C/S 16 BITS = 0100 1110 1001 0010
SEGUNDO BPF C/S 16 BITS = 1011 0001 0010 0011
PRIMER = 4E92 BASE 16 -> 20114 BASE 10
SEGUNDO = COMO TIENE UN 1 PRIMERO HAGO EL COMPLEMENTO

00000 0000 0000 000
 0100 1110 1101 1100
 +                 1
 -------------------
 0100 1110 1101 1101
 4EDD BASE 16 --> 20189 BASE 10

 A + COMPLEMENTO DE B
 
 01001 1101 0010 0000 --> COMO LOS DOS ULTIMOS BITS DEL ACARREO NO SON IGUALES EL RESULTADO ES INVALIDO
  0100 1110 1001 0010
+ 0100 1110 1101 1101
  -------------------
  1001 1101 0110 1111


2351126110641175 BASE 8 A BASE 16 -->
4E 92 B1 23 42 7D | BASE 16
X     X  --------
EL EMPAQUETADO MAS LARGO ES 23427D --> - 23427 |BASE 10
- 5B83 |BASE 16
- 0101 1011 1000 0011 |BASE 2
NORMALIZO
1,01 1011 1000 0011|BASE 2 * 10'14|BASE 10
SIGNO = 1
EXP = 14 + 127 = 141 BASE 10 --> 1000 1101

1 1000 1101 01 1011 1000 0011 0000 0000 0 |BPF IEEE 754

1100 0110 1011 0111 0000 0110 0000 0000 (AGRUPO DE A 4 DIGITOS EN ABSE 12 Q UE EQUIVALENA  UNO EN BASE 16)
C6B70600|BASE 16
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
Dada la siguiente secuencia en la memoria desde la dirección 50B(16) hasta la dirección 513(16) inclusive:

00 23 24 10 07 62 76 03 27 01 00 62

Se pide:
a) Determinar la base en la que se encuentra la secuencia.
b) Hallar todos los empaquetados de la secuencia, sin superposición.
c) Tomar el primer y el último empaquetado hallados en el punto anterior y restarlos en formato BPF c/signo de 32 bits e indicar la
validez del resultado.

24 DIGITOS
9 CELDAS
9 CELDAS = 72 BITS
24 DIGITOS = 72 BITS
1 DIGITO = 3 BITS

A) BASE = 2'N = 2'3 = 8 --> LA BASE DE LA SECUENCIA ES 8
--------------------------------------------------------
002324100762760327010062 |BASE 8

0000 0001 0011 0101 0000 1000 0001 1111 0010 1111 1000 0011 0101 1100 0001 0000 0011 0010|BASE 2

01 35 08 1F 2F 83 5C 10 32|BASE 16

B)
01 35 08 1F
2F
83 5C
----------------------------------------------------------
01 35 08 1F|BASE 16 --> 135081 |BASE 10
20FA9| BASE 16
0010 0000 1111 1010 1001|BASE 2
EXTIENDO A 32 BITS
0000 0000 0000 0010 0000 1111 1010 1001 BPF C/S 32 BITS --> A

83 5C|BASE 16 --> 835 |BASE 10
343| BASE 16
0011 0100 0011 |BASE 2
EXTIENDO A 32 BITS
0000 0000 0000 0000 0000 0011 0100 0011 BPF C/S 32 BITS --> B

PARA QUE SEA MAS FACIL EN VES DE RESTAR VOY A HACER A + COMPLEMENTO DE B

COMPLEMENTO DE B = 1111 1111 1111 1111 1111 1100 1011 1101

   11111 1111 1111 1111 1111 1111 0111 001 --> es resultado es valido ya que los 2 ultimos bits del acarreo son iguales
    0000 0000 0000 0010 0000 1111 1010 1001
+   1111 1111 1111 1111 1111 1100 1011 1101
    ---------------------------------------
    0000 0000 0000 0010 0000 1100 0110 0110

